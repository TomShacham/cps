// Generated by CoffeeScript 1.9.3
(function() {
  var Cps, chain, cps;

  Cps = require('../src/cps');

  cps = Cps.cps;

  chain = Cps.chain;

  describe('cps', function() {
    it('works with unary functions', function() {
      var add1, cpsAdd1;
      add1 = function(x) {
        return x + 1;
      };
      cpsAdd1 = cps(add1);
      return expect(cpsAdd1(0)(function(x) {
        return x + 1;
      })).toEqual(2);
    });
    it('and binary functions', function() {
      var binaryFunction, cpsFun;
      binaryFunction = function(x, y) {
        return x + y;
      };
      cpsFun = cps(binaryFunction);
      return expect(cpsFun(1, 2)(function(x) {
        return x + 1;
      })).toEqual(4);
    });
    return it('and ternary functions', function() {
      var cpsFun, ternaryFunction;
      ternaryFunction = function(x, y, z) {
        return x + y + z;
      };
      cpsFun = cps(ternaryFunction);
      return expect(cpsFun(1, 2, 3)(function(x) {
        return x + 1;
      })).toEqual(7);
    });
  });

  describe('chaining cps functions', function() {
    it('chaining one function works as normal cps function', function() {
      var add1Cps;
      add1Cps = cps(function(x) {
        return x + 1;
      });
      return expect(chain(add1Cps)(0)(function(x) {
        return x + 1;
      })).toEqual(2);
    });
    it('passes the result of one function into the next', function() {
      var add1Cps, add2Cps, add3Cps;
      add1Cps = cps(function(x) {
        return x + 1;
      });
      add2Cps = cps(function(x) {
        return x + 2;
      });
      add3Cps = chain(add1Cps, add2Cps);
      return expect(add3Cps(1)(function(x) {
        return x + 1;
      })).toEqual(5);
    });
    return it('chains as many functions together as you want', function() {
      var add15Cps, add1Cps, add2Cps, add3Cps, add4Cps, add5Cps;
      add1Cps = cps(function(x) {
        return x + 1;
      });
      add2Cps = cps(function(x) {
        return x + 2;
      });
      add3Cps = cps(function(x) {
        return x + 3;
      });
      add4Cps = cps(function(x) {
        return x + 4;
      });
      add5Cps = cps(function(x) {
        return x + 5;
      });
      add15Cps = chain(add1Cps, add2Cps, add3Cps, add4Cps, add5Cps);
      return expect(add15Cps(0)(function(x) {
        return x + 1;
      })).toEqual(16);
    });
  });

}).call(this);
